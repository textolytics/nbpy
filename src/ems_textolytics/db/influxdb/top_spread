var tick = stream
    |from()
        .measurement('tick')
        .retentionPolicy('autogen')
        .measurement('tick')
        .groupBy('instrument')
    |window()
        .periodCount(20)
        .everyCount(1)

var last_bid_price = tick
    |last('bid_price')
        .as('last_bid_price')

var last_ask_price = tick
    |last('ask_price')
        .as('last_ask_price')

var last_spread = tick
    |eval(lambda: ("last_ask_price" - "last_bid_price") / "last_bid_price")
        .as('last_spread')

var sample_best_spread = last_spread
    |sample(10s)
    |httpOut('sample_best_spread')

var best_spread = sample_best_spread
    |groupBy('instrument')
    |bottom(7, 'last_spread')

// Store top fifteen player scores in InfluxDB.
sample_best_spread
    |influxDBOut()
        .database('tick')
        .measurement('spread')
        .tag('instrument', 'instrument')
