#user  nobody
worker_processes  1;

error_log  /var/log/nginx/error.log warn;

events {
        worker_connections  1024;
}

http {

        include    mime.types;
        default_type  application/octet-stream;

        #gzip setup
        gzip on;
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
        gzip_buffers 16 8k;


        sendfile                on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        #log formats
        log_format bitbucket '$time_iso8601 $remote_addr - $remote_user $proxy_host$request$cookie_bitbucketsess "$request" $status $body_bytes_sent $request_time' ;

        #proxy cache formats
        proxy_cache_path temp/bitbucket_cache levels=1:2 keys_zone=bitbucket_cache:25m max_size=500m inactive=5m use_temp_path=off;

        ##################################Maps to detect Influx hardcoded traffic############################
        #check the referer to identify requests originated by Influx Web UI
        map $http_referer $proxyloc {
                ~*influx influx;
        }

        #Influx Web API end points
        map $request_uri $backend {
                ~*query influxdb;
                ~*write influxdb;
                ~*ping  influxdb;
        }

        #We will enable caching for only queries, not for regular UI pages of bitbucket
        map $request_uri $nonquery {
                ~*query 0;
                ~*query 0;
                default 1;
        }
        #####################################################################################################

        ######################################Upstream servers###############################################
        upstream bitbucket {
                server localhost:3000;
                keepalive 15;
        }

        #####################################################################################################


        server {
                listen     80;
                server_name  bitbucket.nb;
                ############################### proxy bitbucket###################################################
                location /bitbucket/ {
                        proxy_buffering on;
                        proxy_buffers 8 128k;
                        proxy_buffer_size 128k;

                        proxy_set_header   Host             $host;
                        proxy_set_header   X-Real-IP        $remote_addr;
                        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                        proxy_http_version 1.1;
                        proxy_set_header Connection "";

                        access_log /var/log/nginx/bitbucket-access.log bitbucket buffer=1024 flush=5m;
                        proxy_pass http://bitbucket/;
                        proxy_redirect     default;

                        proxy_cache_key "$request_uri";
                        proxy_cache_min_uses 1;
                        proxy_cache bitbucket_cache;
                        proxy_cache_bypass $nonquery;
                        proxy_cache_valid 200 302 120s;
                        proxy_cache_valid 404 1m;
                        add_header X-Cache-Status $upstream_cache_status;

                        #proxy_cache_key $proxy_host$request$cookie_bitbucketsess;
                        #proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
                }
                ###########################################################################################
#####

                ###################Default location also handles the Influx redirects######################
#####
                location /{
                        if ($backend) {
                                return 302 /$backend/$request_uri;
                        }

                        if ($proxyloc) {
                                return 302 /$proxyloc/$uri;
                        }
                        return 302 /bitbucket/;
                }
                ###########################################################################################
#####
        }
}
                                                                                         